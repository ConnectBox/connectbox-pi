---

- name: Create backup directories
  file:
    owner: postgres
    group: postgres
    mode: 0750
    state: directory
    path: "{{ item }}"
  with_items:
    - "{{ postgresql_backup_local_dir }}"
    - "{{ postgresql_backup_local_dir }}/bin"
    - "{{ postgresql_backup_active_dir }}"

- name: Install backup scripts
  template:
    src: "{{ item }}.j2"
    dest: "{{ postgresql_backup_local_dir }}/bin/{{ item }}"
    owner: postgres
    group: postgres
    mode: 0750
  with_items:
    - backup_working_wal.sh
    - archive_wal.sh
    - scheduled_backup.sh

- name: Set WAL archive config options
  template:
    src: 20ansible_backup.conf.j2
    dest: "{{ postgresql_conf_dir }}/conf.d/20ansible_backup.conf"
    owner: postgres
    group: postgres
    backup: yes
  notify: Reload PostgreSQL

- name: Schedule backups
  cron:
    name: "PostgreSQL Backup"
    cron_file: ansible_postgresql_backup
    user: postgres
    hour: "{{ postgresql_backup_hour | default(1) }}"
    minute: "{{ postgresql_backup_minute | default(0) }}"
    day: "{{ postgresql_backup_day | default(omit) }}"
    month: "{{ postgresql_backup_month | default(omit) }}"
    weekday: "{{ postgresql_backup_weekday | default(omit) }}"
    job: >-
      {{ postgresql_backup_local_dir }}/bin/scheduled_backup.sh{{
        ' && ' ~ postgresql_backup_post_command if postgresql_backup_post_command is defined else ''
      }}

- name: Schedule PostgreSQL working WAL backup
  cron:
    name: "PostgreSQL WAL Backup"
    cron_file: ansible_postgresql_walbackup
    user: postgres
    job: "{{ postgresql_backup_local_dir }}/bin/backup_working_wal.sh"
