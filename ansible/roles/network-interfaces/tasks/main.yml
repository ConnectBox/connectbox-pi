---

- name: Check if NetworkManager package is installed
  command: dpkg -s network-manager
  register: nm_installed_check
  failed_when: nm_installed_check.rc > 1

- name: Check if the command is running
  command: service --status-all
  register: nm_installed_test

- name: Stop NetworkManager
  service:
    name: network-manager
    state: stopped
    enabled: no
  when: nm_installed_test.stdout.find('network-manager') >= 0

- name: Remove NetworkManager
  apt:
    pkg: network-manager
    state: absent

- name: Make sure systemd-resolved is not running
  service:
    name: systemd-resolved
    state: stopped
    enabled: no

- name: Install usbmuxd for Tethering iPhones
  apt:
    package: usbmuxd
    state: present

- name: Install usb-modeswitch for techtering android
  apt:
    package: usb-modeswitch
    state: present

- name: Configure network interfaces NEO
  template:
    src: etc_network_interfaces.j2
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: 0644
  register: etc_network_interfaces

- name: Configure network interfaces.j2 base
  template:
    src: etc_network_interfaces.j2
    dest: /etc/network/interfaces.j2
    owner: root
    group: root
    mode: 0644

- name: Configure /etc/wpa_supplicant/template direcotry
  file:
     path: /etc/wpa_supplicant/templates
     state: directory  

- name: Configure wpa_supplicant.conf
  template:
    src: wpa_supplicant.conf.j2
    dest: /etc/wpa_supplicant/wpa_supplicant.conf
    owner: root
    group: root
    mode: 0644

- name: Configure wpa_supplicant/templates 
  template:
    src: wpa_supplicant.conf.j2
    dest: /etc/wpa_supplicant/templates/wpa_supplicant.conf.j2
    owner: root
    group: root
    mode: 0644

- name: Copy over the new dhcpcd.conf files
  template:
    src: etc_dhcpcd.conf.j2
    dest: /etc/dhcpcd.conf 
    owner: root
    group: root
    mode: 0644

- name: Add items dhcpcd under init.d
  blockinfile:
    path: /etc/init.d/dhcpcd
    insertafter: "### END INIT INFO"
    block: |
      # This fires up the WLAN0 on Pi
      /usr/local/connectbox/bin/wlan0.pl &
  when: (not aws_instance) and (connectbox_os != "armbian") and (connectbox_os != 'ubuntu') and (not OZ2_present)

# name: create directory /etc/dhcp/etc_dhcp_dhclient-enter-hooks
- file: 
    path: /etc/dhcp/dhclient-enter-hooks
    owner: root
    group: root
    state: directory

- name: Add items dhcpcd under /etc/dhcp/dhclient-enter-hooks.d/ 
  template:
    src: etc_dhcp_dhclient-enter-hooks_wlan0.pl 
    dest: /etc/dhcp/dhclient-enter-hooks/wlan0.pl 
    owner: root
    group: root
    mode: 0755
  when: not aws_instance and OZ2_present

- name: Register the release number
  shell:
    cmd: (uname -r)
  register: kernel_num


- name: give the current kernel number
  debug:
    msg: "Current Kernel # is: {{ kernel_num.stdout }}"

- name: set the default values for variables for drivers
  ansible.builtin.set_fact:
    driver_x : false
    driver_a : false
    driver_b : false
    driver_2b : false
    driver_a1 : false
    driver_b1 : false
    compile_a : false
    compile_b : false

- name: Check for drivers that already exisist and we compiled for this release
  copy:
    src: "{{ kernel_num.stdout }}/"
    dest: "/lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/"
    owner: root
    group: root
    mode: '0644'
  register: found_drivers
  ignore_errors: true 

- name: tell if we found pre-compiled drivers
  debug:
    msg: "We found pre-compiled drivers on the build system!"
  ignore_errors: yes
  when: not found_drivers.failed

- name: check for exsisting drivers in os 
  shell: "ls /lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/"
  register: List_output
  ignore_errors: true

- debug:
    msg: 'Output of driver search is :\n {{ List_output.stdout }}'
  ignore_errors: yes
  when: not (List_output.failed)

- name: check for rtl88xxxu
  shell: echo  "true"
  register: driver_x
  ignore_errors: yes
  when: ('"rtl8xxxu" in List_output.stdout') and (connectbox_os != 'raspbian') 
  
- name: check for rtl8812au
  shell: echo "true"
  register: driver_a
  ignore_errors: yes
  when: ('"rtl88XXau" in List_output.stdout' or '"rtl8812au" in List_output.stdout')

- name: check for rtl88xbu
  shell: echo "true"
  register: driver_b
  ignore_errors: yes
  when: ('"rtl88xbu" in List_output.stdout')

- name: check for rtl88x2bu
  shell: echo "true"
  register: driver_2b
  ignore_errors: yes
  when: ('"rtl88x2bu" in List_output.stdout')

- name: Let the user know that we found the drivers
  debug:
    msg: We found the drivers already compiled on the system for some kernels
  when: (driver_x.stdout or driver_a.stdout or driver_b.stdout or driver_2b.stdout)

- name: lets check for exsisting 8812au driver
  shell: dmesg -H | grep -G 88..au
  register: driver_a1
  ignore_errors: yes
  when: ((not driver_a.stdout) and (not driver_x.stdout)) 

- name: lets check for the 8812bu driver
  shell: dmesg -H | grep -G 88.2bu
  register: driver_b1
  ignore_errors: yes
  when: ((not driver_b.stdout) and (not driver_x.stdout) and (not driver_2b.stdout))

- name: Insert the driver into the kernel modules 8812au
  command: insmod  /lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/rtl8812au/8812au.ko
  ignore_errors: yes
  register: changed1
  when: (not('"8812au" in driver_a1.stdout') and driver_a.stdout)

- name: insert the driver into the kernel modules 88x2bu
  command: insmod  /lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/rtl88x2bu/88x2bu.ko
  ignore_errors: yes
  register: changed2
  when: (not('"88x2bu" in driver_b1.stdout') and driver_2b.stdout)

- name: finish the module dependancies
  command: depmod
  ignore_errors: yes
  when: changed1.changed or changed2.changed

- name: Copy over the script to test for drivers in realtime.  We may need them for the alternate kernel
  copy:
    src: loadwifi.sh 
    dest: /usr/local/connectbox/bin/
    owner: root
    group: root
    mode: '0777'
  when: (('"8812au" in driver_a1.stdout') or ('"88x2bu" in driver_b1.stdout'))

# This line was moved to bootstrap/tasks/main.yml since two edits don't work 
# See Add items to rc.local in bootstrap.
#- name: Add items to rc.local
#  blockinfile:
#    path: /etc/rc.local
#    insertafter: "# By default this script does nothing."
#    block: |
#       Add running of loadwifi.sh to the end of boot with rc.local
#        sh /usr/local/connectbox/bin/loadwifi.sh
#  when: not aws_instance

- name: Create a variable based on the results of the finds for compile_a
  command: echo 'yes'
  register: compile_a
  when: not (('"8812au" in driver_a1.stdout') or ('"88xxau" in driver_a1.stdout') or driver_a.stdout or driver_x.stdout)


- name: Create a variable based on the results ofthe finds for compile_b
  command: echo 'yes'
  register: compile_b
  when: not (('"88x2bu" in driver_b1.stdout') or ('"88x2b" in driver_b1.stdout') or driver_b.stdout or driver_2b.stdout or driver_x.stdout)

# Note we have already upgraded the OS to the lattest in role bootstrap
# now we just install the current OS build tools

- debug:
    msg: "We need to compile the 8812au drivers"
  when: compile_a

- debug:
    msg: "We need to compile the 88x2bu driver"
  when: compile_b

- name: apt install build tools
  apt:
    pkg:
    - build-essential
    - bc
    - libelf-dev
    - libssl-dev
    state: present
  ignore_errors: yes
  when: (compile_a or compile_b)

- name: apt install raspberrypi-kernel-headers
  apt:
    pkg:
    - raspberrypi-kernel-headers
    state: present
  ignore_errors: yes
  when: ((connectbox_os == "raspbian") and (compile_b or compile_a))

# or apt-get install linux-headers-$(uname -r)
- name: apt install linux-headers-current-sunxi
  apt:
    pkg:
    - linux-headers-current-sunxi
    state: present
  ignore_errors: yes
  when: ((connectbox_os != "raspbian") and (compile_b or compile_a))

- name: Copy over 8812au-install script for Raspian
  copy:
    src: 8812au-install.sh
    dest: /tmp/8812au-install.sh
    mode: "+x"
  ignore_errors: yes
  when: compile_a

- name: Compile the 8812au driver for Raspbian or NEO
  command:
     chdir: /tmp
     cmd: "sh 8812au-install.sh"
  ignore_errors: yes
  when: compile_a

- name: Copy over 88x2bu-install script for Raspian
  copy:
    src: 88x2bu-install.sh
    dest: /tmp/88x2bu-install.sh
    mode: "+x"
  ignore_errors: yes
  when: compile_b

- name: Fetch the compiled 8812au driver to control machine
  fetch:
    src: /tmp/rtl8812au*/88x12au.ko 
    dest: "~/connectbox/connectbox-tools/{{ kernel_num }}_8812au.ko"
    fail_on_missing: yes
    flat: yes
  ignore_errors: yes
  when: compile_a

- name: Compile the 88x2bu driver for Raspbian or NEO
  command:
     chdir: /tmp
     cmd: "sh 88x2bu-install.sh"
  ignore_errors: yes
  when: compile_b

- name: Fetch the compiled 8812bu driver to control machine
  fetch:
    src: /tmp/rtl88x2bu*/88x12bu.ko 
    dest: "~/connectbox/connectbox-tools/{{ kernel_num }}_8812bu.ko"
    fail_on_missing: yes
    flat: yes
  ignore_errors: yes
  when: compile_b

- name: Remove headers for raspbian
  apt:
    pkg:
    - raspberrypi-kernel-headers
    state: absent
  ignore_errors: yes
  when: ((compile_a or compile_b) and (connectbox_os == "raspbian"))

# or remove linux-headers-$(uname -r)
- name: apt install linux-headers-current-sunxi
  apt:
    pkg:
    - linux-headers-current-sunxi
    state: absent
  ignore_errors: yes
  when: ((connectbox_os != "raspbian") and  (compile_a or compile_b))

- name: remove build tools
  apt:
    pkg:
    - build-essential
    - bc
    - libelf-dev
    - libssl-dev
    - raspbewrrypi-kernel-headers
    state: absent
  ignore_errors: yes
  when:  (compile_a or compile_b)

# Note: this is not a handler because we need the network configuration in
# effect before proceeding with the wifi-ap and firewall roles, which will
# otherwise fail if not.
- name: Restart network
  service:
    name: systemd-networkd.service
    state: restarted
  when: etc_network_interfaces
  tags:
    # This task on change is intentionally not a handler; don't trigger ANSIBLE0016
    - skip_ansible_lint


