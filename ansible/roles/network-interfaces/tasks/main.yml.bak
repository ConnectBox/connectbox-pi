---

- name: Check if NetworkManager package is installed
  command: dpkg -s network-manager
  register: nm_installed_check
  failed_when: nm_installed_check.rc > 1

- name: Check if the command is running
  command: service --status-all
  register: nm_installed_test

- name: Stop NetworkManager
  service:
    name: network-manager
    state: stopped
    enabled: no
  when: nm_installed_test.stdout.find('network-manager') > 0

- name: Remove NetworkManager
  apt:
    pkg: network-manager
    state: absent

- name: Install loadwifi.sh
  copy:
    src: loadwifi.sh 
    dest: /usr/local/connectbox/bin/loadwifi.sh

- name: change permissions on loadwifi.sh
  file:
    path:  /usr/local/connectbox/bin/loadwifi.sh
    owner: _connectbox
    group: _connectbox

    mode: 0755

- name: Add items to rc.local
  blockinfile:
    path: /etc/rc.local
    insertafter: "#BEGIN ANSIBLE MANAGED BLOCK"
    marker: <!--- {~} load wifi script -->
    block: |
      # Run shell script to load Wifi drivers into kernel if they are no 
      # already loaded (alternate kernels on some devices)
      sh /usr/local/connectbox/bin/loadwifi.sh   

- name: Make sure systemd-resolved is not running
  service:
    name: systemd-resolved
    state: stopped
    enabled: no

- name: Install usbmuxd for Tethering Internet Connection
  apt:
    package: usbmuxd

- name: Configure network interfaces NEO
  template:
    src: etc_network_interfaces.j2
    dest: /etc/network/interfaces
    owner: root
    group: root
    mode: 0644
  register: etc_network_interfaces

- name: Configure network interfaces.j2 base
  template:
    src: etc_network_interfaces.j2
    dest: /etc/network/interfaces.j2
    owner: root
    group: root
    mode: 0644

- name: Configure /etc/wpa_supplicant/template direcotry
  file:
     path: /etc/wpa_supplicant/templates
     state: directory  

- name: Configure wpa_supplicant.conf
  template:
    src: wpa_supplicant.conf.j2
    dest: /etc/wpa_supplicant/wpa_supplicant.conf
    owner: root
    group: root
    mode: 0644

- name: Configure wpa_supplicant/templates 
  template:
    src: wpa_supplicant.conf.j2
    dest: /etc/wpa_supplicant/templates/wpa_supplicant.conf.j2
    owner: root
    group: root
    mode: 0644

- name: Copy over the new dhcpcd.conf files
  template:
    src: etc_dhcpcd.conf.j2
    dest: /etc/dhcpcd.conf 
    owner: root
    group: root
    mode: 0644

- name: Add items dhcpcd under init.d
  blockinfile:
    path: /etc/init.d/dhcpcd
    insertafter: "### END INIT INFO"
    block: |
      # This fires up the WLAN0 on Pi
      /usr/local/connectbox/bin/wlan0.pl &
  when: not aws_instance and connectbox_os != "armbian" and connectbox_os != 'ubuntu' and not OZ2_present

- name: create directory /etc/dhcp/etc_dhcp_dhclient-enter-hooks
  file: 
    path: /etc/dhcp/dhclient-enter-hooks
    state: directory

- name: Add items dhcpcd under /etc/dhcp/dhclient-enter-hooks.d/ 
  template:
    src: etc_dhcp_dhclient-enter-hooks_wlan0.pl 
    dest: /etc/dhcp/dhclient-enter-hooks/wlan0.pl 
    owner: root
    group: root
    mode: 0755
  when: not aws_instance and OZ2_present

- name: Register the release number
  shell:
    cmd: uname -r
  register: kernel_num


- name: give the current kernel number
  debug:
    msg: "Current Kernel # is: {{ kernel_num.stdout }}"


- name: Check for drivers that already exisist and we compiled for this release
  copy:
    src: "{{ kernel_num.stdout }}/"
    dest: /lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/
    owner: root
    group: root
    mode: '0644'
  register: found_drivers
  ignore_errors: true

- name: look for alternate kernel drivers that may need to be loaded
  shell:
    cmd: ls /lib/modules
  register: module_ver

- name: double check the list
  set_fact:
    file_list: "{{ module_ver.stdout.split() | map('regex_replace', '.*$', '/') | list }}"
  debug:
    msg: "the list is {{ file_list }}"

#- name: Check for drivers that already exsist and we compiled for this release
#  copy:
#    src:  "{{ item }}"
#    dest: /lib/modules/"{{ item }}"/kernel/drivers/net/wireless/
#    owner: root
#    group: root
#    mode: '0644'
#  with_items: "{{ file_list|flatten(levels=1) }}"
#  register: Copy_output
#  ignore_errors: true

#- name: register if we found the drivers for our current kernels
#  register: found_drivers
#  when: Copy_output.stdout.find("8812au") or Copy_output.stdout.find("88x2bu") 

- name: check for exsisting drivers in os 
  command: grep -r rtl88* /usr/lib/modules/{{ module_ver }}/kernel/drivers/net/wireless
  register: List_output
  ignore_errors: true

- name: check for rtl88xxxu
  register: found_drivers
  when: List_output.stdout.find("rtl8xxxu")
  
- name: check for rtl8812au
  register: driver_a
  when: List_output.stdout.find("rtl8812au")

- name: check for rtl8812bu
  register: driverf_b
  when: List_output.stdout.find("rtl88xbu")

- name: Let the user know that we found the drivers
  debug:
    msg: We found the drivers already compiled on the system for some kernels
  when: found_drivers is succeeded or driver_a is succeeded or driver_b is succeeded

- name: lets check for exsisting 8812au driver
  shell: dmesg -k | grep -G 88..au
  register: driver_a
  ignore_errors: true
  when: not driver_a succeeded and not found_drivers succeeded

- name: lset check for the 8812bu driver
  shell: dmesg -k | grep -G 88.2bu
  register: driver_b
  ignore_errors: true
  when: not driver_b succeeded and not found_drivers succeeded

- name: Insert the driver into the kernel modules 8812au
  command: insmod  /lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/8812au.ko
  when:
    - found_drivers is succeeded
    - driver_a.stdout.find("8812au") == -1

- name: insert the driver into the kernel modules 88x2bu
  command: insmod  /lib/modules/{{ kernel_num.stdout }}/kernel/drivers/net/wireless/88x2bu.ko
  ignore_errors: true
  when:
    - found_drivers is succeeded
    - driver_b.stdout.find("88x2bu") == -1

- name: finish the module dependancies
  command: depmod
  ignore_errors: true
  when:
    - found_drivers is succeeded
    - (driver_a.stdout.find("8812au") == -1 or driver_b.stdout.find("88x2bu") == -1)

- name: Copy over the script to test for drivers in realtime.  We may need them for the alternate kernel
  copy:
    src: loadwifi.sh 
    dest: /usr/local/connectbox/bin/
    owner: root
    group: root
    mode: '0777'

- name: Add running of loadwifi.sh to the end of boot with rc.local  
  command: echo "sh /usr/local/connectbox/bin/loadwifi.sh" >> /etc/rc.local


# Note we have already upgraded the OS to the lattest in role bootstrap
# now we just install the current OS build tools

- name: apt install build tools
  apt:
    pkg:
    - build-essential
    - bc
    - libelf-dev
    - libssl-dev
    state: present
  when: (found_drivers.failed or driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("88x2bu") <= -1 ) and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0) 

- name: apt install raspberrypi-kernel-headers
  apt:
    pkg:
    - raspberrypi-kernel-headers
    state: present
  when: connectbox_os == "raspbian" and  (found_drivers.failed and (driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("8812bu") <= -1 )) and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0)

# or apt-get install linux-headers-$(uname -r)
- name: apt install linux-headers-current-sunxi
  apt:
    pkg:
    - linux-headers-current-sunxi
    state: present
  when: connectbox_os != "raspbian" and  (found_drivers.failed and (driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("8812bu") <= -1 )) and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0)

- name: Copy over 8812au-install script for Raspian
  copy:
    src: 8812au-install.sh
    dest: /tmp/8812au-install.sh
    mode: "+x"
  when: found_drivers.failed and driver_a.stdout.find("8812au") <= -1 and driver_a.stdout.find("88XXau")<0

- name: Compile the 8812au driver for Raspbian or NEO
  command:
     chdir: /tmp
     cmd: "sh 8812au-install.sh"
  when: found_drivers.failed and driver_a.stdout.find("8812au") <= -1 and driver_a.stdout.find("88XXau")<0

- name: Copy over 88x2bu-install script for Raspian
  copy:
    src: 88x2bu-install.sh
    dest: /tmp/88x2bu-install.sh
    mode: "+x"
  when: found_drivers.failed and driver_b.stdout.find("8812bu") <= -1 and driver_b.stdout.find("88X2bu")<0

- name: Fetch the compiled 8812au driver to control machine
  fetch:
    src: /tmp/rtl8812au*/88x12au.ko 
    dest: "~/connectbox/connectbox-tools/{{ kernel_num.stdout }}_8812au.ko"
  ignore_errors: yes
  when: found_drivers.failed and driver_a.stdout.find("8812au") <= -1 and driver_a.stdout.find("88XXau")<0

- name: Compile the 88x2bu driver for Raspbian or NEO
  command:
     chdir: /tmp
     cmd: "sh 88x2bu-install.sh"
  when: found_drivers.failed and driver_b.stdout.find("8812bu") <= -1 and driver_b.stdout.find("88X2bu")< 0

- name: Fetch the compiled 8812bu driver to control machine
  fetch:
    src: /tmp/rtl88x2bu*/88x12bu.ko 
    dest: "~/connectbox/connectbox-tools/{{ kernel_num.stdout }}_8812bu.ko"
    fail_on_missing: yes
    flat: yes
  ignore_errors: yes
  when: found_drivers.failed and driver_b.stdout.find("8812bu") <= -1 and driver_b.stdout.find("88X2bu")< 0

- name: Remove headers for raspbian
  apt:
    pkg:
    - raspberrypi-kernel-headers
    state: absent
  when: connectbox_os == "raspbian" and  (found_drivers.failed and (driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("8812bu") <= -1 )) and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0)

# or remove linux-headers-$(uname -r)
- name: apt install linux-headers-current-sunxi
  apt:
    pkg:
    - linux-headers-current-sunxi
    state: absent
  when: connectbox_os != "raspbian" and  (found_drivers.failed and (driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("8812bu") <= -1 )) and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0)

- name: remove headers for raspbian
  apt:
    pkg:
    - raspberrypi-kernel-headerst
    state: absent
  when: connectbox_os == "raspbian" and  (found_drivers.failed and (driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("8812bu") <= -1 ))  and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0)

- name: remove build tools
  apt:
    pkg:
    - build-essential
    - bc
    - libelf-dev
    - libssl-dev
    - raspbewrrypi-kernel-headers
    state: absent
  when:  (found_drivers.failed or driver_a.stdout.find("8812au") <= -1 or driver_b.stdout.find("8812bu") <= -1 ) and not (driver_a.stdout.find("88XXau")>=0 or driver_b.stdout.find("88X2bu")>=0)

# Note: this is not a handler because we need the network configuration in
# effect before proceeding with the wifi-ap and firewall roles, which will
# otherwise fail if not.
- name: Restart network
  service:
    name: systemd-networkd.service
    state: restarted
  when: etc_network_interfaces.changed
  tags:
    # This task on change is intentionally not a handler; don't trigger ANSIBLE0016
    - skip_ansible_lint


