---
- name: create folders for default content/shared and config
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0775
  with_items:
    - "{{ connectbox_default_content_root }}"
    - "{{ connectbox_app_root }}"

- name: retrieve connectbox-client-repo
  git:
    repo: "{{ connectbox_client_repo }}"
    dest: /tmp/connectbox_client
    version: '{{ sample_repo_rev }}'

- name: Copy external connectbox client interface
  command: cp -r . "{{ connectbox_default_content_root }}"
  args:
    chdir: /tmp/connectbox_client/{{ connectbox_client_path }}

- name: fix ownership of connectbox_web_root
  file:
    path: "{{ connectbox_web_root }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: yes

- name: find files in /tmp
  find:
    paths: "/tmp/files"
  register: contents
  ignore_errors: true

- name: clear space in the /tmp directory
  file:
    path: "{{ item.path }}"
    state: absent
  with_items: "{{ contents.files }}"
  ignore_errors: true

- name: force a reinstallation of setuptools
  pip:
    virtualenv: "{{ connectbox_web_root }}/connectbox_virtualenv"  # XXX Could do better?
    virtualenv_python: python3
    name: setuptools
    State: forcereinstall


# The chat and admin backend
- name: Install packages for connectbox server process
  pip:
    virtualenv: "{{ connectbox_web_root }}/connectbox_virtualenv"  # XXX Could do better?
    virtualenv_python: python3
    name: ['flask>=2.0.2', 'ua-parser==0.10.0', 'gunicorn==20.1.0', 'requests>=2.25.1', 'six==1.16.0', 'sqlalchemy>=1.4.3']
    state: present
  tags:
    - captive_portal

# Copy client interface files
- name: Copy connectbox client interface
  synchronize:
    src: ../python/
    dest: "{{ connectbox_app_root }}"
  tags:
    - captive_portal
  notify:
    - Restart gunicorn

- name: Copy gunicorn tempfiles definition
  template:
    src: etc_tmpfiles.d_gunicorn.conf.j2
    dest: /etc/tmpfiles.d/gunicorn.conf
  tags:
    - captive_portal

- name: Copy gunicorn systemd unit file
  template:
    src: etc_systemd_system_gunicorn.service.j2
    dest: /etc/systemd/system/gunicorn.service
  tags:
    - captive_portal
  notify: Restart gunicorn

- name: Enable gunicorn service
  service:
    name: gunicorn
    enabled: yes
    #state: started
  tags:
    - captive_portal
