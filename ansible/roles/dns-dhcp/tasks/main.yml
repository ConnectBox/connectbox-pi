---
- name: Copy dnsmasq configuration
  template:
    src: etc_dnsmasq.conf.j2
    dest: /etc/dnsmasq.conf
    owner: root
    group: root
    mode: 0644

- name: Create dnsmasq directory
  file:
    path: /etc/dnsmasq
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Copy script used by dhcp-script handler
  template:
    src: process-dhcp-event.sh.j2
    dest: /etc/dnsmasq/process-dhcp-event.sh
    owner: root
    group: root
    mode: 0700

# Note that the handler must do a restart instead of a reload as some of
#  these defaults are only read at startup
- name: Create defaults for dnsmasq used when starting dnsmasq (including not adding the local machine as a resolver)
  copy:
    src: etc_default_dnsmasq
    dest: /etc/default/dnsmasq

# This is necessary because nginx redirects to the hostname, but the hostname
#  is listed in /etc/hosts and associated with 127.0.0.1 (so dnsmasq uses it
#  when answering queries). By adding this, and the localise-queries option
#  to dnsmasq, we answer with the address of the wifi interface. There's no
#  need to do this for the ethernet interface, as we're not answering queries
#  on that interface (we're not even listening)
- name: Add /etc/hosts entry for wifi interface
  lineinfile:
    dest: /etc/hosts
    line: "{{ client_facing_if_ip_address }} {{ connectbox_default_hostname }}"

# Install dnsmasq after the config files are in place.
# Installation of dnsmasq starts the service, and if the config files aren't
#  correct when the service starts, it removes the upstream resolver from
#  /etc/resolv.conf, and it's necessary to restart dhclient to repopulate
#  /etc/resolv.conf with the upstream resolver.
# Unfortunately this means we can't use the validate clause on the
#  dnsmasq.conf template task
- name: Install dnsmasq
  apt:
    name: dnsmasq
    state: present

- name: Stop and disable dnsmasq given it is managed as a pre-down post-up task for wlan0
  service:
    name: dnsmasq
    enabled: no
    state: stopped

# No need for a followup service task, as it's automatically enabled and
#  started.
- name: Install avahi-daemon
  apt:
    name: avahi-daemon
    state: present

# Default is to start and enable, but let's be sure
- name: Enable and start avahi-daemon
  service:
    name: avahi-daemon
    enabled: yes
    state: started
